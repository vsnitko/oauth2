pipeline {
	agent any

	environment {
		SSH_USER = 'wo4ko'
		REMOTE_HOST = '84.201.153.184'
	}

	stages {
		stage('Install Docker and docker-compose on Ubuntu') {
			steps {
				script {
					sshagent(['ssh']) {
						def dockerInstalled = sh(script: "ssh -o StrictHostKeyChecking=no ${SSH_USER}@${REMOTE_HOST} 'docker --version'", returnStatus: true) == 0
						if (!dockerInstalled) {
							sh """ssh -o StrictHostKeyChecking=no ${SSH_USER}@${REMOTE_HOST} '
							sudo apt install -y docker.io
							sudo curl -L "https://github.com/docker/compose/releases/download/v2.33.0/docker-compose-\$(uname -s)-\$(uname -m)" -o /usr/local/bin/docker-compose
							sudo chmod +x /usr/local/bin/docker-compose
							sudo usermod -aG docker \$USER
							sudo mkdir -p /opt/oauth2/
							sudo chown ${SSH_USER}:${SSH_USER} /opt/oauth2/
							'"""
						}
					}
				}
			}
		}
		stage('Set env variables on remote server') {
			steps {
				script {
					sshagent(['ssh']) {
						withCredentials([
							usernamePassword(credentialsId: 'docker-credentials', passwordVariable: 'DOCKER_CREDS_PSW', usernameVariable: 'DOCKER_USERNAME'),
							usernamePassword(credentialsId: 'google-oauth2', passwordVariable: 'GOOGLE_CLIENT_SECRET', usernameVariable: 'GOOGLE_CLIENT_ID'),
							usernamePassword(credentialsId: 'github-oauth2', passwordVariable: 'GITHUB_CLIENT_SECRET', usernameVariable: 'GITHUB_CLIENT_ID'),
							usernamePassword(credentialsId: 'email', passwordVariable: 'EMAIL_PASSWORD', usernameVariable: 'EMAIL_USERNAME')
						]) {
							def variables = [
								"GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}",
								"GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}",
								"GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}",
								"GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}",
								"EMAIL_PASSWORD=${EMAIL_PASSWORD}",
								"REMOTE_HOST=${REMOTE_HOST}",
							]
							for (variable in variables) {
								def (key, value) = variable.split('=')
								sh """ssh -o StrictHostKeyChecking=no ${SSH_USER}@${REMOTE_HOST} '
								if grep -q "^${key}=" /etc/environment; then
    							    sudo sed -i "s/^${key}=.*/${variable}/" /etc/environment
    							else
    							    echo "${variable}" | sudo tee -a /etc/environment
    							fi
								'"""
							}
						}
					}
				}
			}
		}
	}
}
